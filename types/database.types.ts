import type { Session, User } from '@supabase/supabase-js';

/**
 * Represents the allowed user roles within the Xiris platform.
 */
export type UserType = 'cliente' | 'tecnico';

/**
 * Possible lifecycle states for a user account.
 */
export type UserStatus =
  | 'active'
  | 'inactive'
  | 'suspended'
  | 'pending_verification';

/**
 * Availability flags used to expose technician presence information.
 */
export type AvailabilityStatus = 'online' | 'offline' | 'busy';

/**
 * Core user profile information shared by both clients and technicians.
 */
export interface Profile {
  /** Unique identifier generated by the database (UUID). */
  id: string;
  /** Primary e-mail address used for authentication. */
  email: string;
  /** Full name for display purposes. */
  full_name: string | null;
  /** Optional phone number supplied by the user. */
  phone: string | null;
  /** Optional avatar image stored in Supabase Storage or external URL. */
  avatar_url: string | null;
  /** User role that determines available functionality within the app. */
  user_type: UserType;
  /** Current account status reflecting onboarding or suspension state. */
  status: UserStatus;
  /** ISO string recording when the profile was created. */
  created_at: string;
  /** ISO string recording when the profile was last updated. */
  updated_at: string;
}

/**
 * Extended data specific to technicians registered on the platform.
 */
export interface TechnicianProfile {
  /** UUID matching the associated profile id. */
  id: string;
  /** List of skill categories or specialties offered by the technician. */
  specialties: string[];
  /** Geographic areas where the technician provides services. */
  service_areas: string[];
  /** Average rating computed from completed service reviews. */
  rating: number;
  /** Total number of services fulfilled through the platform. */
  total_services: number;
  /** Indicates whether the technician passed the verification process. */
  is_verified: boolean;
  /** Arbitrary documents used during verification. */
  verification_documents: Record<string, unknown>;
  /** Technician availability status for new assignments. */
  availability_status: AvailabilityStatus;
  /** Real-time coordinates when location sharing is enabled. */
  current_location: { lat: number; lng: number } | null;
  /** ISO creation timestamp for the technician profile. */
  created_at: string;
}

/**
 * Additional attributes for client accounts.
 */
export interface ClientProfile {
  /** UUID matching the associated profile id. */
  id: string;
  /** Optional billing or service address. */
  address: string | null;
  /** Saved payment preference supplied by the client. */
  preferred_payment_method: string | null;
  /** Total number of service requests created by the client. */
  total_requests: number;
  /** ISO creation timestamp for the client profile. */
  created_at: string;
}

/**
 * Aggregated representation of a profile and its role specific data.
 */
export type DatabaseProfile = Profile & {
  /** Technician specific fields when the user_type is `tecnico`. */
  technician_profile?: TechnicianProfile;
  /** Client specific fields when the user_type is `cliente`. */
  client_profile?: ClientProfile;
};

/**
 * Data required to register a new account through Supabase Auth.
 */
export interface SignUpData {
  /** Email used for authentication. */
  email: string;
  /** Password supplied during sign-up. */
  password: string;
  /** Display name captured during onboarding. */
  full_name?: string | null;
  /** Optional contact number collected at registration. */
  phone?: string | null;
  /** Role selected for the new account. */
  user_type: UserType;
  /** Optional structured data persisted as user metadata. */
  metadata?: Record<string, unknown>;
}

/**
 * Credentials required to authenticate an existing user.
 */
export interface SignInData {
  /** Email supplied by the user. */
  email: string;
  /** Password submitted during sign-in. */
  password: string;
  /** Optional one-time password for MFA flows. */
  otp?: string;
  /** Whether the session should persist beyond the current browser tab. */
  rememberMe?: boolean;
}

/**
 * Patch payload for updating a user profile.
 */
export interface UpdateProfileData {
  /** Profile identifier to update. */
  id: string;
  /** Partial set of profile fields. */
  profile?: Partial<
    Pick<Profile, 'full_name' | 'phone' | 'avatar_url' | 'status'>
  >;
  /** Optional technician profile adjustments. */
  technician_profile?: Partial<
    Omit<TechnicianProfile, 'id' | 'created_at'>
  >;
  /** Optional client profile adjustments. */
  client_profile?: Partial<
    Omit<ClientProfile, 'id' | 'created_at'>
  >;
}

/**
 * Normalised response returned after performing an authentication action.
 */
export interface AuthResponse {
  /** Supabase user representation. */
  user: User | null;
  /** Active session data returned by Supabase. */
  session: Session | null;
  /** Optional hydrated profile tied to the authenticated user. */
  profile?: DatabaseProfile | null;
  /** Error message when the authentication attempt fails. */
  error?: string;
}
